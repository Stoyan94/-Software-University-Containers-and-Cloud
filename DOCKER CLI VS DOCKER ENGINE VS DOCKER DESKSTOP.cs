Docker CLI – Какво, Защо, Как, Кога?
Docker CLI (Command Line Interface) е команден инструмент, който позволява работа с Docker чрез терминала/конзолата.
Той дава възможност за управление на контейнери, изображения, мрежи, обеми и други ресурси, свързани с Docker.

1. Какво е Docker CLI?
Docker CLI е команден интерфейс, който идва с инсталацията на Docker и позволява на потребителите да взаимодействат с Docker Engine чрез команди.
Вместо да използваш графичен интерфейс, можеш да изпълняваш команди директно в терминала.


2. Защо се използва Docker CLI?
Използването на Docker CLI има няколко ключови предимства:

Автоматизация – Позволява автоматизирано управление на контейнери чрез скриптове.
Гъвкавост – Можеш лесно да разгръщаш, стартираш, спираш и премахваш контейнери.
Ефективност – Позволява бързо управление на Docker ресурси, без да е нужен GUI.
Интеграция с CI/CD – Използва се в DevOps процесите за автоматизация на билдове и разгръщания.


3. Как се използва Docker CLI?
Docker CLI се използва чрез команди в терминала. Някои основни команди:

3.1.Управление на контейнери
docker run -d --name my_container nginx – стартира контейнер с Nginx.
docker ps – показва работещите контейнери.
docker ps -a – показва всички контейнери, включително спрени.
docker stop my_container – спира контейнер.
docker rm my_container – премахва контейнер.

3.2. Управление на изображения
docker pull nginx – изтегля Nginx образа от Docker Hub.
docker images – показва всички налични изображения.
docker rmi nginx – премахва изображение.

3.3. Създаване и управление на собствени образи
docker build -t my_image . – създава образ от Dockerfile.
docker tag my_image my_repo/my_image:latest – добавя таг на изображението.
docker push my_repo/my_image:latest – качва изображение в Docker Hub.

3.4. Управление на мрежи
docker network ls – показва всички мрежи.
docker network create my_network – създава мрежа.
docker network connect my_network my_container – свързва контейнер към мрежа.

4. Кога да използваш Docker CLI?
Използвай Docker CLI, когато:

Разработваш и тестваш софтуер в изолирана среда.
Разгръщаш приложения в контейнери.
Автоматизираш DevOps процеси.
Управляваш сложни системи с микросървиси.
Docker CLI е мощен инструмент за управление на контейнери. Ако ще работиш с Docker, трябва да се запознаеш с него и да го използваш ефективно. 🚀





Docker CLI vs. Docker Engine vs. Docker Desktop
Docker екосистемата се състои от различни компоненти, които работят заедно, за да осигурят контейнери, виртуализация и управление на приложения.
Трите ключови части, които често се бъркат, са Docker CLI, Docker Engine и Docker Desktop.

1. Какво представляват?
Компонент	    Какво е?
Docker CLI	    Команден интерфейс (терминален инструмент) за взаимодействие с Docker Engine. Позволява управление на контейнери, изображения, мрежи и обеми.
Docker Engine	Основният сървърен процес на Docker, който изпълнява контейнерите. Той съдържа контейнерния рантайм (container runtime) и API за управление на ресурси.
Docker Desktop	Пълна платформа за използване на Docker на Windows и macOS. Включва Docker Engine, Docker CLI и графичен интерфейс (GUI) за управление на контейнери.


2. Разлика в предназначението
Компонент	    Предназначение
Docker CLI	    Позволява на потребителя да управлява Docker чрез команди.
Docker Engine	Отговаря за изпълнението на контейнерите, тяхното управление и взаимодействие с операционната система.
Docker Desktop	Инсталационен пакет, който осигурява лесно използване на Docker в Windows/macOS и включва Docker Engine, CLI и GUI инструменти.


3. Основни разлики
Критерий	                 Docker CLI	                  Docker Engine	                      Docker Desktop
Функция	                     Команден инструмент	      Контейнерен мениджър	              Пълно Docker решение
Как работи?	                 Изпълнява команди	          Изпълнява контейнери	              Инсталира и конфигурира Docker среда
Изисква Docker Engine?	     Да	                          Не (той е самият Engine             Включва Docker Engine
Операционна система	         Linux, Windows, macOS	      Linux (включително WSL2 на Windows) Windows, macOS
Графичен интерфейс (GUI)     Не	                          Не	                              Да
Нужда от отделна инсталация? Не (идва с Docker Engine)	  Да	                              Да (за Windows/macOS)


4. Кога да използваш кое?
Използвай Docker CLI, ако:
Работиш в терминал и предпочиташ команден ред.
Имаш инсталиран Docker Engine и искаш да управляваш контейнери чрез скриптове.
    

Използвай Docker Engine, ако:
Искаш да стартираш и управляваш контейнери в Linux или чрез CI/CD.
Разгръщаш приложения в production среди.

Използвай Docker Desktop, ако:
Работиш на Windows или macOS и искаш лесен начин да използваш Docker.
Предпочиташ GUI интерфейс за управление на контейнери.


Заключение
Docker CLI е интерфейсът, с който управляваш Docker Engine, а Docker Desktop е удобен пакет, който включва и двете, плюс допълнителни функции за разработчици.
Ако си на Linux, най-вероятно ще използваш Docker Engine + Docker CLI, а ако си на Windows/macOS – Docker Desktop ще бъде най-удобният вариант. 🚀





Какво можеш и не можеш да управляваш с Docker CLI, Docker Engine и Docker Desktop?

Компонент
Docker CLI  Какво МОЖЕШ да управляваш? > Контейнери, изображения, мрежи, обеми, тагване и публикуване на изображения, изпълнение на команди в контейнери.
            Какво НЕ МОЖЕШ да управляваш? > Не може да работи без Docker Engine. Няма графичен интерфейс (GUI).

Компонент
Docker Engine  Какво МОЖЕШ да управляваш? > Контейнери, изпълнение и управление на процеси, взаимодействие с хост операционната система, API за автоматизация.
               Какво НЕ МОЖЕШ да управляваш? > Не осигурява команден интерфейс (нужен е CLI). Не включва графичен интерфейс.

Docker Desktop Какво МОЖЕШ да управляваш? > Всичко, което могат Docker CLI + Docker Engine + допълнителни инструменти като Kubernetes и GUI.
               Какво НЕ МОЖЕШ да управляваш? > Не може да работи на чист Linux (само Windows/macOS). По-тежък като ресурс.

Детайлно сравнение на управлението
Функция	                                               Docker CLI	                    Docker Engine	                Docker Desktop
Стартиране на контейнери	                           ✅ Да	                        ✅ Да (ако е извикано от CLI)	✅ Да
Спиране и премахване на контейнери	                   ✅ Да	                        ✅ Да (чрез CLI)	            ✅ Да
Управление на мрежи (Docker Networks)	               ✅ Да	                        ✅ Да (чрез CLI)	            ✅ Да
Управление на обеми (Docker Volumes)	               ✅ Да	                        ✅ Да (чрез CLI)	            ✅ Да
Създаване и управление на Docker изображения	       ✅ Да	                        ✅ Да (използва CLI)	        ✅ Да
Интерактивна работа с контейнери (exec, logs, attach)  ✅ Да	                        ✅ Да (чрез CLI)	            ✅ Да
Изпълнение на Docker API заявки	                       ❌ Не (използва API на Engine)	✅ Да	                        ✅ Да
Графичен интерфейс (GUI) за управление	               ❌ Не	                        ❌ Не	                        ✅ Да
Интегрирана поддръжка на Kubernetes	                   ❌ Не	                        ❌ Не	                        ✅ Да
Използване без Docker Engine	                       ❌ Не	                        ✅ Да	                        ❌ Не
Работа на Windows/macOS	                               ✅ Да	                        ❌ Не	                        ✅ Да
Работа на Linux	                                       ✅ Да	                        ✅ Да	                        ❌ Не


Заключение
Docker CLI – Позволява командно управление, но не работи без Docker Engine.
Docker Engine – Основният сървърен процес, но няма CLI за директна работа.
Docker Desktop – Пълен пакет за Windows/macOS, но не работи на Linux.
Ако си на Linux → нужни са Docker Engine + CLI.
Ако си на Windows/macOS → Docker Desktop е най-удобният вариант. 🚀

